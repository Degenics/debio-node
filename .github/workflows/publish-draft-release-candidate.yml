name: Publish draft release candidate

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+-rc*'

concurrency:
  group: publish-draft-release-candidate

jobs:
  compute-build-info:
    runs-on: ubuntu-20.04
    outputs:
      latest_tag: ${{ steps.build-info.outputs.latest_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Compute build info
        id: build-info
        shell: bash
        run: |
          version=${GITHUB_REF#refs/*/}
          echo $version
          echo "::set-output name=latest_tag::$version"

  build-and-publish:
    runs-on: ubuntu-20.04
    needs: compute-build-info
    env:
      RUST_BACKTRACE: full
      RUSTC_WRAPPER: sccache
      RUSTV: stable
      SCCACHE_CACHE_SIZE: 2G
      SCCACHE_DIR: /home/runner/.cache/sccache
      # SCCACHE_RECACHE: 1 # Uncomment this to clear cache, then comment it back out
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install sccache
        env:
          LINK: https://github.com/mozilla/sccache/releases/download
          SCCACHE_VERSION: 0.2.13
        run: |
          SCCACHE_FILE=sccache-$SCCACHE_VERSION-x86_64-unknown-linux-musl
          mkdir -p $HOME/.local/bin
          curl -L "$LINK/$SCCACHE_VERSION/$SCCACHE_FILE.tar.gz" | tar xz
          mv -f $SCCACHE_FILE/sccache $HOME/.local/bin/sccache
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: clippy, rustfmt
          target: wasm32-unknown-unknown
          override: true
          default: true
      - name: Cache rust or cargo project
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/
            target/
            ./chain-spec.json
            ./SHA256SUMS
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-
      - name: Save sccache
        uses: actions/cache@v2
        continue-on-error: false
        with:
          path: /home/runner/.cache/sccache
          key: ${{ runner.os }}-sccache-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-sccache-
      - name: Start sccache server
        run: sccache --start-server
      - name: Cargo build
        run: cargo build --release --locked
      - name: Print sccache stats
        run: sccache --show-stats
      - name: Stop sccache server
        run: sccache --stop-server || true
      - name: Generate the chainspec file
        run: ./target/release/debio build-spec --disable-default-bootnode --chain mainnet > chain-spec.json
      - name: Generate sha256 hash
        run: sha256sum chain-spec.json> SHA256SUMS
      ## build and publish docker image
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Copy binnary file
        run: cp target/release/debio .
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          file: .maintain/docker/injected-binnary.Dockerfile
          tags: |
            ${{ github.repository }}:${{ needs.compute-build-info.outputs.latest_tag }}
            ${{ github.repository }}:latest-alpha
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      ## publish draft release
      - name: Build changelog
        id: build_changelog
        uses: mikepenz/release-changelog-builder-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          configuration: '.github/workflows/rcb_config.json'
      - name: Create draft release
        uses: softprops/action-gh-release@v1
        with:
          body: ${{ steps.build_changelog.outputs.changelog }}
          draft: true
          prerelease: true
          files: |
            ./target/release/wbuild/debio-runtime/debio_runtime.compact.compressed.wasm
            ./target/release/debio
            ./chain-spec.json
            ./SHA256SUMS
